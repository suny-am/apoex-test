{
  "version": 3,
  "sources": ["../../javascript/typescript/modules/BeerManager.ts", "../../javascript/typescript/index.ts", "../../javascript/application.js"],
  "sourcesContent": ["// predfined beer interface\nimport { Beer } from '../interfaces'\nexport default class BeerManager\n{\n    /*\n    | main function to generate the beer list for the client\n    */\n\n    public async generateList(mainDisplay?: HTMLElement, beers?: Array<Beer>, pageList?: Array<Array<Beer>>, selectedPage?: number)\n    {\n\n        // wip main display content if repopulating\n        mainDisplay.childNodes.forEach(childNode =>\n        {\n            childNode.remove()\n        })\n\n        let currentPage = selectedPage ? selectedPage : 0\n\n        // array to hold pages\n        let pages = pageList ? pageList : new Array<Array<Beer>>\n\n        // collect all items into spliced \"page\" arrays if items exeed 10\n        if (pages.length === 0 && beers)\n        {\n            if (beers.length > 10)\n            {\n                pages.push(...this.paginate(beers, 10, 10, 10))\n                this.createNavigation(mainDisplay, pages)\n            }\n            else\n            {\n                // remove pagination as it is not needed for shorter collections\n                if (document.querySelector(\".pagination-wrapper\"))\n                {\n                    document.querySelector(\".pagination-title\").remove()\n                    document.querySelector(\".pagination-wrapper\").remove()\n                }\n                pages.push(beers)\n            }\n        }\n\n        // populate display with inital page of search results\n        pages[currentPage].forEach((beer: Beer) =>\n        {\n            let beerBox = document.createElement(\"div\")\n            beerBox.classList.add('beer-box')\n            // generate an image based on the relevant API object key and value\n            // for some visual flair!\n            let beerImage = document.createElement('img')\n            let beerDetails = document.createElement('div')\n            beerImage.src = beer.image_url\n            beerImage.classList.add('beer-image')\n            beerBox.appendChild(beerImage)\n            mainDisplay.appendChild(beerBox)\n            let beerObject = [\n                { name: beer.name },\n                { abv: beer.abv },\n                { desc: beer.description },\n            ]\n            // create the beer info items\n            beerObject.forEach((object) =>\n            {\n                let p = document.createElement('p')\n                let div = document.createElement('div')\n                if (object.name)\n                {\n                    p.textContent = \"Name:\"\n                    div.textContent = object.name\n                    beerBox.appendChild(p)\n                    beerBox.appendChild(div)\n                } else if (object.abv)\n                {\n                    p.textContent = \"ABV (Alchohol By Volume):\"\n                    div.textContent = object.abv.toString() + \"%\"\n                    beerBox.appendChild(p)\n                    beerBox.appendChild(div)\n                } else\n                {\n                    p.textContent = \"Description:\"\n                    div.textContent = object.desc\n                    beerDetails.appendChild(p)\n                    beerDetails.appendChild(div)\n                }\n                p.classList.add(\"data-header\")\n                div.classList.add(\"data-point\")\n            })\n            let goesWellWith = document.createElement('p')\n            beerDetails.appendChild(goesWellWith)\n            goesWellWith.textContent = \"Goes well with:\"\n            goesWellWith.classList.add('data-header')\n\n            beer.food_pairing.forEach((pairing) =>\n            {\n                let div = document.createElement(\"div\")\n\n                div.classList.add('data-point')\n                div.textContent = \"- \" + pairing\n                beerDetails.appendChild(div)\n            })\n            beerBox.appendChild(beerDetails)\n            beerDetails.classList.add('beer-details')\n            // hide the details for users to be revealed if clicked\n            beerDetails.classList.add('hidden')\n            beerBox.addEventListener('click', (Event) => this.showDetails(Event, beerDetails))\n        })\n    }\n\n    /*\n    | general fetch function\n    */\n\n    public async fetchBeers(request: Request)\n    {\n        return fetch(request).then((response) =>\n        {\n            try\n            {\n                return response.json()\n            } catch (err)\n            {\n                console.error(response.statusText, err)\n                throw new Error(response.statusText)\n            }\n        })\n    }\n\n    /*\n    | general helper function to wip the main display before display new \n    | search results\n    */\n\n    public async cleanMainDisplay(mainDisplay: HTMLElement, userSearchNotice: string)\n    {\n        document.querySelector('pagination-title')?.remove()\n        document.querySelector('pagination-wrapper')?.remove()\n        mainDisplay.innerHTML = \"\"\n        let notice = document.createElement('p')\n        notice.classList.add('no-result-notice')\n        notice.textContent = userSearchNotice\n        mainDisplay.appendChild(notice)\n        return\n    }\n\n    /*\n    | helper function to create set of 10 items for pagination\n    */\n\n    private * paginate(array: Array<Beer>, stride: number, size: number, offset = 0)\n    {\n        for (let i = offset; i < array.length; i += stride)\n        {\n            yield array.slice(i, i + size);\n        }\n    }\n\n    /*\n    | helper function to allow user to switch page of results\n    */\n\n    private async changePage(mainDisplay: HTMLElement, pageList: Array<Array<Beer>>, Event: MouseEvent)\n    {\n        let pageNumber = Number((Event.target as HTMLElement).textContent.toString()) - 1\n        this.generateList(mainDisplay, null, pageList, pageNumber)\n    }\n\n    /*\n    | create page navigation controls for user if it does not exist\n    */\n\n    private async createNavigation(mainDisplay: HTMLElement, pages: Array<Array<Beer>>)\n    {\n        if (!document.querySelector(\".pagination-wrapper\"))\n        {\n            let pageNavigationTitle = document.createElement('div')\n            pageNavigationTitle.textContent = \"Pages\"\n            pageNavigationTitle.classList.add(\"pagination-title\")\n            document.body.appendChild(pageNavigationTitle)\n            let paginationDisplayWrapper = document.createElement(\"div\")\n            paginationDisplayWrapper.classList.add('pagination-wrapper')\n            document.body.appendChild(paginationDisplayWrapper)\n            for (let i = 0; i < pages.length; i++)\n            {\n                let pageNumber = document.createElement(\"p\")\n                paginationDisplayWrapper.appendChild(pageNumber)\n                pageNumber.textContent = (i + 1).toString()\n                pageNumber.addEventListener('click', (Event: MouseEvent) => this.changePage(mainDisplay, pages, Event))\n            }\n        }\n    }\n\n    /*\n    | helper function to show details of beer\n    */\n\n    private async showDetails(Event: MouseEvent, beerDetails: HTMLElement)\n    {\n        if (beerDetails.classList.contains('hidden'))\n        {\n            beerDetails.classList.remove('hidden')\n        }\n        else\n        {\n            beerDetails.classList.add('hidden')\n        }\n    }\n}\n", "import { Beer } from './interfaces'\nimport * as Modules from './modules'\n\nconst beerManager = new Modules.BeerManager()\n\n// relevant API query root\nconst punkApiRoot = \"https://api.punkapi.com/v2/beers?per_page=80&\"\nexport default class BeerFetcher\n{\n    /*\n    |  general listeners for search input\n    */\n    public async searchListen()\n    {\n        let searchQuery = document.querySelector('.search-field') as HTMLInputElement\n        let rubySearchButton = document.querySelector('.rb-search-button')\n        let typeScriptSearchButton = document.querySelector('.ts-search-button')\n        // add event listeners for search query submission \n        rubySearchButton.addEventListener('click', (Event: MouseEvent) => this.rubySearch(Event, searchQuery.value.replaceAll(\" \", \"_\")))\n        typeScriptSearchButton.addEventListener('click', (Event: MouseEvent) => this.typeScriptSearch(Event, searchQuery.value.replaceAll(\" \", \"_\")))\n    }\n\n\n    /*\n    |   This search is handled mainly via ruby code. the js request here only serves to contact the backend\n    */\n    public async rubySearch(Event: MouseEvent, searchQuery: string)\n    {\n        // let user know that a search term is mandatory and exit silently\n        let mainDisplay = document.querySelector('#main-display') as HTMLElement\n        if (searchQuery === undefined || searchQuery === null || searchQuery === \"\")\n        {\n            beerManager.cleanMainDisplay(mainDisplay, \"Enter a search term to search for beers!\")\n            return\n        }\n\n        // ruby search endpoint\n        let rubyEndpoint = \"http://localhost:3000/beers/search\"\n\n        // send searchQuery in body via a simple post to the relevant ruby controller action\n        let request = new Request(rubyEndpoint)\n        let requestBody = searchQuery\n        fetch(request, { method: \"POST\", body: requestBody }).then(async (response) =>\n        {\n            // populate display with response from ruby controller search action\n            let beers = (await response.json())\n\n            beerManager.generateList(mainDisplay, beers[0])\n        })\n    }\n\n    /*\n    |   This search is handled mainly via Javascript. Ruby is largely only used for the view rendering.\n    */\n    public async typeScriptSearch(Event: KeyboardEvent | MouseEvent, searchQuery: string)\n    {\n\n        // let user know that a search term is mandatory and exit silently\n        let mainDisplay = document.querySelector('#main-display') as HTMLElement\n        if (searchQuery === undefined || searchQuery === null || searchQuery === \"\")\n        {\n            beerManager.cleanMainDisplay(mainDisplay, \"Enter a search term to search for beers!\")\n            return\n        }\n\n        // save API query to variable\n        let request = new Request(punkApiRoot + `beer_name=${ searchQuery }`)\n        let response = await beerManager.fetchBeers(request)\n        let beers = await response\n\n        // log response output to control length\n        console.log(\"Beer list count: \" + beers.length)\n\n        // let user know if no results were found and exit silently\n        if (beers.length === 0)\n        {\n            beerManager.cleanMainDisplay(mainDisplay, \"No results found... try again!\")\n            return\n        }\n\n        // recurse through pages if beer list exceeds one page number limit\n        // exit recurse if the search result does not contain 80 items,\n        // as with the given \"per_page\" parameter of the punkApiRoot constant\n        // setting this would entail there could be no more pages.\n        // if the initial quota does not reach 80 the results are passed straight\n        // to the client.\n\n        if (beers.length === 80)\n        {\n            let searchFinished = false\n            for (let i = 2; searchFinished != true; i++)\n            {\n                let recurseRequest = new Request(punkApiRoot + `page=${ i }&beer_name=${ searchQuery }`)\n                let response = await beerManager.fetchBeers(recurseRequest)\n                let moreBeers = await response\n                beers.push(moreBeers)\n                if (moreBeers.length < 80)\n                {\n                    searchFinished = true\n                }\n            }\n            beerManager.generateList(mainDisplay, await beers)\n        } else\n        {\n            beerManager.generateList(mainDisplay, await beers)\n        }\n    }\n}", "import BeerFetcher from './typescript'\n\nnew BeerFetcher().searchListen()\n"],
  "mappings": "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",
  "names": ["response"]
}
